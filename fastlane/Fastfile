# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

app_name = "Weather App"

platform :ios do

  	# Lane to be run by Jenkins
	desc "Set up Jenkins, Clean build folder & Archives & Unlock the Keychain"
  	lane :jenkins_setup do |options|

    setup_jenkins

    # clear derive data
    clear_derived_data()
    sh("rm -rf ~/Library/Developer/Xcode/Archives/*")

    # Increment the build number from the passed options
    build_number = options[:buildNumber]
    increment_build_number build_number: build_number

    # unlock the keychain
    	if options[:password]
      		unlock_keychain(path: "login.keychain",password: options[:password])
    	end
  	end
  
  	# Lane to be run by Jenkins
  	desc "Run Unit Tests"
  	lane :unit_tests do |options|
		BUILD_SCHEME =  options[:scheme]
		run_tests(scheme: BUILD_SCHEME)
  	end

	# Lane to be run by Jenkins
	desc "Jenkins : Scan Unit-Tests & Run SonarQube"
  	lane :sonarqube do |options|
  
  	BRANCH_NAME = options[:branchName]
  	XCODE_DESTINATION = {
    	iphoneos: "generic/platform=iOS",
    	iphonesimulator: "platform=iOS Simulator,OS=16.2,name=iPhone 14 Pro"
  	}

    scan(
      workspace: "Weather App.xcworkspace",
      scheme: "Debug",
      destination: XCODE_DESTINATION[:iphonesimulator],
      code_coverage: true,
      clean: true,
      skip_build: false,
      output_directory: "build",
      output_types: "html,junit,json-compilation-database",
      output_style: "basic",
      buildlog_path: "build",
      derived_data_path: "build",
    )

    # get the app version and build number from private lane and use it for sonar
    version_build_number = get_version_build_number
    
    # settings are in sonar-project.properties
    	sonar(
        	sonar_url: "",
			sonar_login: "",
			project_key: "", 
			project_version: version_build_number,
			project_name: "",
			sources_path: File.expand_path("../#{app_name}"),
			branch_name:  BRANCH_NAME
	    )
	end

  	# Lane to be run by Jenkins
  	desc "Create ipa"
  	lane :generate_ipa do |options|

    	BUILD_SCHEME =  options[:scheme]
    	EXPORT_METHOD = options[:exportMethod]

    	# get the build name 
    	build_name = get_build_name

	    # export options plist should have the same name, as same scheme name.
    	# plist expected to be in ExportOptions folder.
	    export_plist_path = "ExportOptions/" + BUILD_SCHEME + "/" + EXPORT_METHOD + ".plist"
	    
	    # Authenticate using App Store connect API
  		app_store_connect_api_key(
			key_id: "",
    		issuer_id: "",
	    	key_filepath: "",
    		duration: 500,
	    	in_house: false
  		)
    	
		# increment TestFlight build number
		increment_build_number({
			build_number: latest_testflight_build_number(version: "1.1.0") + 1
		})

    	# archive
		gym(
		  scheme: BUILD_SCHEME,
		  export_method: EXPORT_METHOD,
		  configuration: BUILD_SCHEME,
		  clean: true,
		  output_directory: "./Builds",
		  output_name: "#{build_name}.ipa",
		  export_options: export_plist_path
		)
	  end

# -------------------------------------------------------------------------------------------
# PRIVATE LANES

	desc "Private Lane: Get the build name"
  	private_lane :get_build_name do
    	version_build_number = get_version_build_number
    	build_date = Time.new.strftime("%Y-%m-%d")
    	output_build_name = app_name + "-" + BUILD_SCHEME + "-" + version_build_number + "-" + build_date
    	puts "Build name: #{output_build_name}"
    	build_name = output_build_name
  	end

  	desc "Private Lane: Get the app version & build number"
  	private_lane :get_version_build_number do
    	version = get_version_number(xcodeproj: "#{app_name}.xcodeproj", target: "#{app_name}")
    	build_number = get_build_number(xcodeproj: "#{app_name}.xcodeproj")
    	version_build_number = "#{version}.#{build_number}"
  	end
end
